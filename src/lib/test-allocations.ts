import { allocationService } from '../services/database';

// Teste simples de aloca√ß√µes
export async function testAllocations() {
  console.log('üß™ Testando sincroniza√ß√£o de aloca√ß√µes...');
  
  try {
    // 1. Buscar aloca√ß√µes existentes
    console.log('1. Buscando aloca√ß√µes existentes...');
    const existing = await allocationService.getAll();
    console.log('Aloca√ß√µes encontradas:', Object.keys(existing).length, 'turnos com aloca√ß√µes');
    
    // 2. Testar adi√ß√£o de aloca√ß√£o
    console.log('2. Testando adi√ß√£o de aloca√ß√£o...');
    const testShiftId = 'test-shift-123';
    const testVolunteerId = 'test-volunteer-456';
    
    try {
      await allocationService.add(testShiftId, testVolunteerId);
      console.log('‚úÖ Aloca√ß√£o adicionada com sucesso');
      
      // 3. Verificar se foi adicionada
      const updated = await allocationService.getAll();
      const wasAdded = updated[testShiftId]?.includes(testVolunteerId);
      console.log('Aloca√ß√£o foi persistida?', wasAdded ? '‚úÖ Sim' : '‚ùå N√£o');
      
      // 4. Remover aloca√ß√£o de teste
      await allocationService.remove(testShiftId, testVolunteerId);
      console.log('‚úÖ Aloca√ß√£o de teste removida');
      
    } catch (error) {
      console.error('‚ùå Erro no teste de aloca√ß√£o:', error);
    }
    
    // 5. Teste de substitui√ß√£o
    console.log('3. Testando substitui√ß√£o de aloca√ß√µes...');
    const testAllocations = {
      'test-shift-1': ['vol-1', 'vol-2'],
      'test-shift-2': ['vol-3']
    };
    
    try {
      await allocationService.replaceAll(testAllocations);
      console.log('‚úÖ Substitui√ß√£o executada');
      
      // Verificar resultado
      const result = await allocationService.getAll();
      console.log('Resultado da substitui√ß√£o:', result);
      
      // Limpar dados de teste
      await allocationService.replaceAll({});
      console.log('‚úÖ Dados de teste limpos');
      
    } catch (error) {
      console.error('‚ùå Erro no teste de substitui√ß√£o:', error);
    }
    
    console.log('üéâ Teste de aloca√ß√µes conclu√≠do!');
    return true;
    
  } catch (error) {
    console.error('üí• Erro geral no teste de aloca√ß√µes:', error);
    return false;
  }
} 